<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Define robot constants -->
    <xacro:property name="base_width" value="0.31" />
    <xacro:property name="base_length" value="0.42" />
    <xacro:property name="base_height" value="0.18" />
    <xacro:property name="turret_height" value="0.04" />
    <xacro:property name="turret_gap" value="0.025" />

    <xacro:property name="wheel_radius" value="0.10" />
    <xacro:property name="wheel_diameter" value="2*${wheel_radius}" />
    <xacro:property name="wheel_width" value="0.04" />
    <xacro:property name="wheel_ygap" value="0.025" />
    <xacro:property name="wheel_zoff" value="0.05" />
    <xacro:property name="wheel_xoff" value="0.12" />
    <xacro:property name="wheel_separation" value="0.4" />

    <xacro:property name="caster_xoff" value="0.14" />

    <!--    base link-->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
            <material name="green" />
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
        </collision>

        <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:box_inertia>
    </link>

    <gazebo reference="base_link">
        <material>Gazebo/Green</material>
    </gazebo>

    <!-- Turret link -->
    <link name="turret_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${turret_height}" />
            </geometry>
            <material name="yellow" />
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${turret_height}" />
            </geometry>
        </collision>

        <xacro:box_inertia m="5" w="${base_width}" d="${base_length}" h="${base_height}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:box_inertia>

    </link>

    <gazebo reference="turret_link">
        <material>Gazebo/Yellow</material>
    </gazebo>

    <joint name="turret_joint" type="continuous">
        <parent link="base_link" />
        <child link="turret_link" />
        <origin xyz="0 0 ${(base_height/2 + turret_gap)} " rpy="0 0 0" />
        <axis xyz="0 0 1" />
    </joint>

    <!-- Robot Footprint -->
    <link name="base_footprint" />

    <joint name="base_joint" type="fixed">
        <parent link="base_link" />
        <child link="base_footprint" />
        <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0" />
    </joint>

    <!--Left
    wheel    -->
    <link name="drivewhl_l_joint_link">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}" />
            </geometry>
        </collision>

        <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:cylinder_inertia>
    </link>

    <gazebo reference="drivewhl_l_joint_link">
        <material>Gazebo/Blue</material>
    </gazebo>


    <joint name="drivewhl_l_joint" type="continuous">
        <parent link="base_link" />
        <child link="drivewhl_l_joint_link" />
        <origin xyz="-${wheel_xoff} ${base_width/2+wheel_ygap} -${wheel_zoff}" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1" />
    </joint>

    <!-- Right wheel    -->
    <link name="drivewhl_r_joint_link">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}" />
            </geometry>
        </collision>

        <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:cylinder_inertia>
    </link>

    <gazebo reference="drivewhl_r_joint_link">
        <material>Gazebo/Blue</material>
    </gazebo>

    <joint name="drivewhl_r_joint" type="continuous">
        <parent link="base_link" />
        <child link="drivewhl_r_joint_link" />
        <origin xyz="-${wheel_xoff} -${base_width/2+wheel_ygap} -${wheel_zoff}" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1" />
    </joint>

    <!-- Caster Wheel -->
    <link name="front_caster">
        <visual>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}" />
            </geometry>
            <material name="cyan" />
        </visual>
        <collision>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}" />
            </geometry>
        </collision>

        <xacro:sphere_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:sphere_inertia>
    </link>

    <gazebo reference="front_caster">
        <material>Gazebo/Black</material>
        <!-- Defining caster wheel's friction coefficients for a smooth motion-->
        <mu1 value="0.001" />
        <mu2 value="0.001" />
    </gazebo>

    <joint name="caster_joint" type="fixed">
        <parent link="base_link" />
        <child link="front_caster" />
        <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0" />
    </joint>
</robot>